[
  {
    "task_id": "I1.T1",
    "iteration_id": "I1",
    "iteration_goal": "Fix the Delete Tour failure by enforcing metadata-driven S3 paths and establish logging/architecture artifacts for future work.",
    "description": "Generate component and data model diagrams capturing current plugin architecture and metadata usage to guide subsequent fixes.",
    "agent_type_hint": "DiagrammingAgent",
    "inputs": "Section 2 of this plan; existing PHP classes in `includes/`",
    "target_files": ["docs/diagrams/h3tm_component.puml", "docs/diagrams/h3tm_data_model.puml"],
    "input_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-s3-simple.php", "includes/class-h3tm-tour-metadata.php"],
    "deliverables": "PlantUML component diagram file; PlantUML ERD file.",
    "acceptance_criteria": "PlantUML files render without syntax errors; Diagrams reflect components and data fields described in Section 2; Stored under docs/diagrams/ with meaningful titles.",
    "dependencies": [],
    "parallelizable": false,
    "done": true
  },
  {
    "task_id": "I1.T2",
    "iteration_id": "I1",
    "iteration_goal": "Fix the Delete Tour failure by enforcing metadata-driven S3 paths and establish logging/architecture artifacts for future work.",
    "description": "Document S3 metadata usage rules and enhance `archive_tour()` to rely on `metadata.s3_folder`, adding verbose logging for deletion flows.",
    "agent_type_hint": "BackendAgent",
    "inputs": "Output from I1.T1; requirements (Critical Bug #1 section).",
    "target_files": ["includes/class-h3tm-s3-simple.php", "docs/notes/s3-operations.md"],
    "input_files": ["includes/class-h3tm-s3-simple.php", "includes/class-h3tm-tour-metadata.php"],
    "deliverables": "Updated PHP logic using metadata-derived S3 paths; Markdown note summarizing S3 deletion rules and logging strategy.",
    "acceptance_criteria": "archive_tour() reads s3_folder via metadata instead of sanitizing display names; Additional logging statements capture S3 paths and outcomes; Markdown note lists test scenarios (spaces, hyphens, special chars) and logging expectations; php -l includes/class-h3tm-s3-simple.php passes.",
    "dependencies": ["I1.T1"],
    "parallelizable": false,
    "done": true
  },
  {
    "task_id": "I1.T3",
    "iteration_id": "I1",
    "iteration_goal": "Fix the Delete Tour failure by enforcing metadata-driven S3 paths and establish logging/architecture artifacts for future work.",
    "description": "Update deletion-related unit tests or add manual test script instructions ensuring tours with varied names delete successfully.",
    "agent_type_hint": "TestingAgent",
    "inputs": "Updated deletion logic (I1.T2), testing checklist in requirements.",
    "target_files": ["docs/notes/s3-operations.md", "tests/manual/delete-tour.md"],
    "input_files": ["includes/class-h3tm-s3-simple.php"],
    "deliverables": "Expanded Markdown note with test validations; new manual test script under tests/manual/delete-tour.md.",
    "acceptance_criteria": "Manual test script outlines steps for multiple tour name variations and expected outcomes; Note references logging entries to verify during testing; Files use consistent Markdown formatting and reside in specified directories.",
    "dependencies": ["I1.T2"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I2.T1",
    "iteration_id": "I2",
    "iteration_goal": "Restore Change URL and Rename functionality across backend and frontend with documented AJAX contracts and refreshed UI behavior.",
    "description": "Document AJAX contracts and produce Change URL sequence diagram to anchor backend/front-end coordination.",
    "agent_type_hint": "DocumentationAgent",
    "inputs": "Section 2 communication patterns; bug details for Change URL.",
    "target_files": ["api/admin_ajax_contract.md", "docs/diagrams/change_url_sequence.puml"],
    "input_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-tour-metadata.php", "assets/js/admin-tour-features.js"],
    "deliverables": "Markdown AJAX reference covering relevant actions; PlantUML sequence diagram for Change URL flow.",
    "acceptance_criteria": "AJAX contract lists request/response schemas, nonces, and success/error codes; Sequence diagram reflects steps from UI trigger to redirect activation; Files render without syntax errors and align with terminology from Section 2.",
    "dependencies": [],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I2.T2",
    "iteration_id": "I2",
    "iteration_goal": "Restore Change URL and Rename functionality across backend and frontend with documented AJAX contracts and refreshed UI behavior.",
    "description": "Fix Change URL backend by ensuring AJAX action registration, callable handler, metadata updates, and redirect integration with detailed logging.",
    "agent_type_hint": "BackendAgent",
    "inputs": "AJAX contract (I2.T1); Critical Bug #2 requirements.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-tour-metadata.php", "includes/class-h3tm-url-redirector.php", "logs/h3tm-debug.log"],
    "input_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-tour-metadata.php", "includes/class-h3tm-url-redirector.php"],
    "deliverables": "Updated PHP handlers with slug change logging; redirector enhancements; optional log stub or config entry.",
    "acceptance_criteria": "AJAX action h3tm_change_tour_url registered in constructor and callable; Metadata method appends old slug to url_history and logs success/failure; Redirector resolves legacy slugs via updated history; PHP lint passes for all modified files.",
    "dependencies": ["I2.T1"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I2.T3",
    "iteration_id": "I2",
    "iteration_goal": "Restore Change URL and Rename functionality across backend and frontend with documented AJAX contracts and refreshed UI behavior.",
    "description": "Update Change URL modal workflow in JS to refresh UI, update embed code, and surface success/error messages.",
    "agent_type_hint": "FrontendAgent",
    "inputs": "AJAX contract and backend response shape from I2.T2.",
    "target_files": ["assets/js/admin-tour-features.js", "assets/js/admin.js"],
    "input_files": ["assets/js/admin-tour-features.js", "assets/js/admin.js"],
    "deliverables": "Refined JS handlers with proper function hoisting, UI refresh logic, and console logging for debugging.",
    "acceptance_criteria": "Change URL flow triggers AJAX request, handles success/failure, and updates table row and embed snippet; Functions defined as declarations or moved before usage to avoid hoisting issues; Node syntax check (node -c) passes on modified JS files.",
    "dependencies": ["I2.T2"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I2.T4",
    "iteration_id": "I2",
    "iteration_goal": "Restore Change URL and Rename functionality across backend and frontend with documented AJAX contracts and refreshed UI behavior.",
    "description": "Repair Rename Tour backend/frontend path ensuring modal display, AJAX submission, and table refresh.",
    "agent_type_hint": "FullstackAgent",
    "inputs": "Bug #3 requirements; outputs from I2.T2 leveraging shared admin infrastructure.",
    "target_files": ["includes/class-h3tm-admin.php", "assets/js/admin.js"],
    "input_files": ["includes/class-h3tm-admin.php", "assets/js/admin.js"],
    "deliverables": "Working rename handler with capability/nonce checks and updated JS event delegation.",
    "acceptance_criteria": "Rename button opens modal and submits new display name; Backend updates metadata without affecting slug; Tour list refreshes to show new name; logging captures operation; PHP and JS lint checks pass.",
    "dependencies": ["I2.T2"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I3.T1",
    "iteration_id": "I3",
    "iteration_goal": "Restore Update Tour, Get Script, and Rebuild Metadata functionality while stabilizing admin JS execution order and documenting interaction flows.",
    "description": "Produce a Mermaid diagram of admin JS interaction flow to guide hoisting fixes and modal sequencing.",
    "agent_type_hint": "DiagrammingAgent",
    "inputs": "Updated JS from I2.T3; Bug #4 and #5 requirements.",
    "target_files": ["docs/diagrams/admin_js_flow.mmd"],
    "input_files": ["assets/js/admin-tour-features.js", "assets/js/admin.js"],
    "deliverables": "Mermaid flow diagram describing modal creation, AJAX calls, and success/error handling.",
    "acceptance_criteria": "Diagram renders in Mermaid preview without errors; Nodes include Update, Get Script, Change URL, Rename, Rebuild Metadata flows; File stored under docs/diagrams/.",
    "dependencies": ["I2.T3"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I3.T2",
    "iteration_id": "I3",
    "iteration_goal": "Restore Update Tour, Get Script, and Rebuild Metadata functionality while stabilizing admin JS execution order and documenting interaction flows.",
    "description": "Reorder or refactor JS functions for Update/Get Script buttons to ensure hoisting, attach console diagnostics, and validate resource loading.",
    "agent_type_hint": "FrontendAgent",
    "inputs": "Interaction flow diagram (I3.T1); Bug #4 requirements.",
    "target_files": ["assets/js/admin-tour-features.js"],
    "input_files": ["assets/js/admin-tour-features.js"],
    "deliverables": "Updated JS with function declarations, logging, and cache-busting hook (version bump in enqueue).",
    "acceptance_criteria": "Functions used before definition are converted to declarations or relocated; Console logs confirm handler execution paths; Enqueued script version updated to invalidate cache; node -c assets/js/admin-tour-features.js passes.",
    "dependencies": ["I3.T1"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I3.T3",
    "iteration_id": "I3",
    "iteration_goal": "Restore Update Tour, Get Script, and Rebuild Metadata functionality while stabilizing admin JS execution order and documenting interaction flows.",
    "description": "Ensure Update Tour backend workflow triggers Lambda, tracks progress (status JSON lookup), and invalidates CloudFront when complete.",
    "agent_type_hint": "BackendAgent",
    "inputs": "Bug #4 requirements; JS changes from I3.T2.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-s3-simple.php", "docs/notes/update-tour.md"],
    "input_files": ["includes/class-h3tm-admin.php", "includes/class-h3tm-s3-simple.php"],
    "deliverables": "Backend updates for progress polling, logging, and CloudFront invalidation steps; documentation note for testing.",
    "acceptance_criteria": "Update handler fetches metadata-derived S3 folder and logs process; Optional status JSON polling endpoint documented; CloudFront invalidation invoked post-success with error handling; PHP lint passes; documentation outlines verification steps.",
    "dependencies": ["I3.T2"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I3.T4",
    "iteration_id": "I3",
    "iteration_goal": "Restore Update Tour, Get Script, and Rebuild Metadata functionality while stabilizing admin JS execution order and documenting interaction flows.",
    "description": "Restore Get Script modal and Rebuild Metadata button behavior with AJAX registration, logging, and UI feedback.",
    "agent_type_hint": "FullstackAgent",
    "inputs": "Bug #4 and #5 requirements; outputs from I3.T2.",
    "target_files": ["includes/class-h3tm-admin.php", "assets/js/admin-tour-features.js", "logs/h3tm-debug.log"],
    "input_files": ["includes/class-h3tm-admin.php", "assets/js/admin-tour-features.js"],
    "deliverables": "Functional Get Script modal with copy feedback; working Rebuild Metadata handler with console and PHP logs.",
    "acceptance_criteria": "AJAX actions h3tm_get_embed_script and h3tm_rebuild_metadata registered and secured with nonces; UI displays confirmation or error messages; console logs for debugging; Manual test instructions updated with success criteria.",
    "dependencies": ["I3.T2", "I3.T3"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I4.T1",
    "iteration_id": "I4",
    "iteration_goal": "Decompose H3TM_Admin into modular traits while preserving functionality and establishing architectural decision documentation.",
    "description": "Draft an ADR detailing trait decomposition strategy, method ownership, and verification steps prior to refactoring.",
    "agent_type_hint": "DocumentationAgent",
    "inputs": "Refactor requirements; outputs from prior iterations.",
    "target_files": ["docs/adr/0001-admin-traits.md"],
    "input_files": ["includes/class-h3tm-admin.php"],
    "deliverables": "Markdown ADR capturing context, decision, consequences, and migration plan.",
    "acceptance_criteria": "ADR lists proposed trait files and responsibilities; Includes testing checklist to run after each extraction; Written in standard ADR template (Context, Decision, Consequences).",
    "dependencies": [],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I4.T2",
    "iteration_id": "I4",
    "iteration_goal": "Decompose H3TM_Admin into modular traits while preserving functionality and establishing architectural decision documentation.",
    "description": "Extract tour action handlers into trait-h3tm-tour-handlers.php and wire into main class.",
    "agent_type_hint": "BackendAgent",
    "inputs": "ADR (I4.T1); stabilized handlers from earlier iterations.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/traits/trait-h3tm-tour-handlers.php"],
    "input_files": ["includes/class-h3tm-admin.php"],
    "deliverables": "New trait file containing tour handler methods; updated admin class using the trait.",
    "acceptance_criteria": "All tour handler methods relocated with no functional change; Namespaces and visibility preserved; use Trait statement added; PHP lint passes and manual smoke test checklist executed.",
    "dependencies": ["I4.T1"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I4.T3",
    "iteration_id": "I4",
    "iteration_goal": "Decompose H3TM_Admin into modular traits while preserving functionality and establishing architectural decision documentation.",
    "description": "Extract delete/rename handlers into dedicated trait with supporting unit/manual tests updated.",
    "agent_type_hint": "BackendAgent",
    "inputs": "ADR (I4.T1); outputs from I4.T2.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/traits/trait-h3tm-delete-rename.php", "tests/manual/delete-tour.md"],
    "input_files": ["includes/class-h3tm-admin.php"],
    "deliverables": "Trait file for delete/rename; updated test documentation referencing trait location.",
    "acceptance_criteria": "Delete and rename methods removed from main class and present in trait; Test documentation updated with new file references; PHP lint passes.",
    "dependencies": ["I4.T2"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I4.T4",
    "iteration_id": "I4",
    "iteration_goal": "Decompose H3TM_Admin into modular traits while preserving functionality and establishing architectural decision documentation.",
    "description": "Extract S3 helper methods into trait, ensuring logging consistency and shared utilities remain accessible.",
    "agent_type_hint": "BackendAgent",
    "inputs": "ADR (I4.T1); previous traits.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/traits/trait-h3tm-s3-operations.php"],
    "input_files": ["includes/class-h3tm-admin.php"],
    "deliverables": "S3 operations trait containing helper methods; admin class updated to use trait.",
    "acceptance_criteria": "Shared properties/methods referenced via $this remain accessible; Logging statements retained or improved; PHP lint passes.",
    "dependencies": ["I4.T3"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I4.T5",
    "iteration_id": "I4",
    "iteration_goal": "Decompose H3TM_Admin into modular traits while preserving functionality and establishing architectural decision documentation.",
    "description": "Extract migration helpers and page renderers into respective traits, finalizing class size reduction.",
    "agent_type_hint": "BackendAgent",
    "inputs": "ADR (I4.T1); previous trait extractions.",
    "target_files": ["includes/class-h3tm-admin.php", "includes/traits/trait-h3tm-migration.php", "includes/traits/trait-h3tm-page-renderers.php"],
    "input_files": ["includes/class-h3tm-admin.php"],
    "deliverables": "Migration and page renderer traits; admin class referencing all traits; updated class docblock summarizing responsibilities.",
    "acceptance_criteria": "Main class shrinks below 400 lines; each trait under ~300 lines; composer dump-autoload (if applicable) reflects new files; autoload config updated if required; Full manual regression checklist executed with no regressions logged.",
    "dependencies": ["I4.T4"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I5.T1",
    "iteration_id": "I5",
    "iteration_goal": "Implement prioritized UX improvements (search/filter, bulk actions, progress indicators, confirmations) atop the refactored codebase.",
    "description": "Produce Mermaid wireframe reflecting target tour table layout with search/filter controls and action hierarchy.",
    "agent_type_hint": "UXDesignerAgent",
    "inputs": "UX requirements; existing admin markup.",
    "target_files": ["docs/diagrams/tour_table_wireframe.mmd"],
    "input_files": ["includes/class-h3tm-admin.php", "assets/js/admin.js", "assets/css/admin.css"],
    "deliverables": "Mermaid diagram describing primary/secondary actions, bulk toolbar, progress indicators.",
    "acceptance_criteria": "Diagram matches requirements (search, filter, bulk, progress, confirmation triggers); Renderable via Mermaid with no errors.",
    "dependencies": [],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I5.T2",
    "iteration_id": "I5",
    "iteration_goal": "Implement prioritized UX improvements (search/filter, bulk actions, progress indicators, confirmations) atop the refactored codebase.",
    "description": "Implement searchable/filterable tour table with bulk selection and dropdown actions in PHP and JS.",
    "agent_type_hint": "FullstackAgent",
    "inputs": "Wireframe (I5.T1); AJAX contract doc (I2.T1).",
    "target_files": ["includes/traits/trait-h3tm-page-renderers.php", "assets/js/admin.js", "assets/css/admin.css"],
    "input_files": ["includes/traits/trait-h3tm-page-renderers.php", "assets/js/admin.js", "assets/css/admin.css"],
    "deliverables": "Updated admin table markup, JS for filtering/bulk actions, CSS tweaks for layout.",
    "acceptance_criteria": "Search input filters results client-side or via AJAX; Bulk dropdown supports at least delete/archive operations with confirmation prompts; Styling aligns with WordPress admin aesthetics; lint checks pass.",
    "dependencies": ["I5.T1"],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I5.T3",
    "iteration_id": "I5",
    "iteration_goal": "Implement prioritized UX improvements (search/filter, bulk actions, progress indicators, confirmations) atop the refactored codebase.",
    "description": "Add confirmation dialogs and progress polling UI components with reusable modal/toast helpers.",
    "agent_type_hint": "FrontendAgent",
    "inputs": "Wireframe (I5.T1); progress infrastructure from I3.T3.",
    "target_files": ["assets/js/admin-tour-features.js", "assets/js/admin.js", "assets/css/admin.css"],
    "input_files": ["assets/js/admin-tour-features.js", "assets/js/admin.js", "assets/css/admin.css"],
    "deliverables": "JS modules for confirmations, progress display, toasts; CSS updates for progress bars and statuses.",
    "acceptance_criteria": "Delete/Archive actions prompt user before execution; Progress indicators show percentage/ETA when status JSON available; UI gracefully handles missing status data (fallback messaging).",
    "dependencies": ["I5.T2", "I3.T3"],
    "parallelizable": true,
    "done": false
  },
  {
    "task_id": "I5.T4",
    "iteration_id": "I5",
    "iteration_goal": "Implement prioritized UX improvements (search/filter, bulk actions, progress indicators, confirmations) atop the refactored codebase.",
    "description": "Update documentation and manual regression suite to cover new UX features and ensure embed code remains accurate.",
    "agent_type_hint": "DocumentationAgent",
    "inputs": "Completed UX features (I5.T2, I5.T3); earlier test docs.",
    "target_files": ["tests/manual/delete-tour.md", "tests/manual/ux-regression.md", "README.md"],
    "input_files": ["tests/manual/delete-tour.md", "docs/notes/update-tour.md"],
    "deliverables": "Updated manual test scripts, new UX regression checklist, README summary of UX improvements.",
    "acceptance_criteria": "Manual test docs cover search/filter, bulk actions, confirmations, progress; README highlights new UX capabilities and testing instructions; Markdown lint (if available) passes.",
    "dependencies": ["I5.T2", "I5.T3"],
    "parallelizable": true,
    "done": false
  }
]
